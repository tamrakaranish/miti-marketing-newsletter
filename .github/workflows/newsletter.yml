name: Generate AI Newsletter (Draft PR)

on:
  schedule:
    - cron: "0 6 * * 3"         # Wednesdays 07:00 CET (06:00 UTC)
  workflow_dispatch:
    inputs:
      target_environment:
        description: 'Where to publish after PR merge'
        required: true
        default: 'test'
        type: choice
        options:
        - test
        - production

permissions:
  contents: write
  pull-requests: write

jobs:
  build-draft:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Generate newsletter markdown
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python scripts/generate.py

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PR_TOKEN }}     # <— use PAT
          branch: newsletter/draft-${{ github.run_id }}
          delete-branch: true
          title: "AI Newsletter draft – ${{ github.run_id }} [ai-agent] → ${{ github.event_name == 'schedule' && 'production' || inputs.target_environment || 'production' }}"
          body: |
            Auto-generated draft for review.
            **Target Environment:** ${{ github.event_name == 'schedule' && 'production' || inputs.target_environment || 'production' }}
            **Cron Generated:** ${{ github.event_name == 'schedule' }}
            
            Source: newsletter/<date>.md
            Please verify sources, claims, and CTA.
            
            When merged, this will publish to the **${{ github.event_name == 'schedule' && 'production' || inputs.target_environment || 'production' }}** Slack channel.
          commit-message: "chore(newsletter): add draft issue [env:${{ github.event_name == 'schedule' && 'production' || inputs.target_environment || 'production' }}]"
          labels: |
            newsletter
            ai
            needs-review
          add-paths: |
            newsletter/**
            sources.yml
            scripts/**

